// Minecraft.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>

int main()
{
    setlocale(LC_ALL, "RU_ru");
    std::cout << "\nПрограмма на простанственное мышление.\n";
    int minecraft[5][5][10], level;
    for (int i = 0; i < 5; ++i)
    {
        std::cout << "Введите значения " << i << " строки через пробел:\n";
        for (int j = 0; j < 5; ++j)
        {
            std::cin >> level;
            for (int k = 0; k < 10; ++k)
            {
                if (level >= 0 && level < 10)
                    if (k<=level)
                        minecraft[i][j][k] = 1;
                    else
                        minecraft[i][j][k] = 0;
                else
                {
                    std::cout << "\nВведено некорректное значение.\n";
                    i--;
                }
            }
        }
    }

    std::cout << "Введите уровень среза: ";
    std::cin >> level;


    // Срез выглядит так
    std::cout << "\nСрез выглядит так:\n";
    for (int i = 0; i < 5; ++i)
    {
        for (int j = 0; j < 5; ++j)
            std::cout << minecraft[i][j][level] << " ";
        std::cout << "\n";
    }
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
